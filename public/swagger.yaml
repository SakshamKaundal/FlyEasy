openapi: 3.0.3
info:
  title: Flight Management API
  description: A comprehensive flight booking and management system API
  version: 1.0.0
  contact:
    name: API Support
    email: support@flightmanagement.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.flightmanagement.com
    description: Production server
  - url: https://dev-api.flightmanagement.com
    description: Development server

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: Flights
    description: Flight search and information
  - name: Bookings
    description: Flight booking management
  - name: Fares
    description: Fare and pricing information
  - name: Real-time
    description: Real-time updates and notifications

paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: securepassword123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successful
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Missing email or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials or email not confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/signup:
    post:
      tags:
        - Authentication
      summary: User registration
      description: Register a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                  example: newuser@example.com
                password:
                  type: string
                  format: password
                  example: securepassword123
                name:
                  type: string
                  example: John Doe
      responses:
        '200':
          description: Signup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signup successful
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/token:
    post:
      tags:
        - Authentication
      summary: Generate JWT token
      description: Generate a JWT token for authenticated sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: Token created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token created
          headers:
            Set-Cookie:
              schema:
                type: string
                example: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict
        '400':
          description: Missing email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/flights/search:
    post:
      tags:
        - Flights
      summary: Search for flights
      description: Search for one-way or round-trip flights
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from
                - to
                - date
              properties:
                from:
                  type: string
                  example: NYC
                to:
                  type: string
                  example: LAX
                date:
                  type: string
                  format: date
                  example: '2024-12-25'
                returnDate:
                  type: string
                  format: date
                  example: '2024-12-30'
      responses:
        '200':
          description: Flight search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  oneWay:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flight'
                  return:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flight'
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/flights/round-trip:
    post:
      tags:
        - Flights
      summary: Search round-trip flights
      description: Search for round-trip flights with specific outbound and return dates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from
                - to
                - outboundDate
                - returnDate
              properties:
                from:
                  type: string
                  example: NYC
                to:
                  type: string
                  example: LAX
                outboundDate:
                  type: string
                  format: date
                  example: '2024-12-25'
                returnDate:
                  type: string
                  format: date
                  example: '2024-12-30'
      responses:
        '200':
          description: Round-trip flight search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  flights:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flight'
        '400':
          description: Missing required parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/fares/check:
    post:
      tags:
        - Fares
      summary: Check fare for specific route
      description: Get fare information for a specific route and travel class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - from
                - to
                - travel_class
              properties:
                from:
                  type: string
                  example: NYC
                to:
                  type: string
                  example: LAX
                travel_class:
                  type: string
                  enum: [economy, premium, business]
                  example: economy
                passenger_type:
                  type: string
                  enum: [infant, child, adult]
                  default: infant
                  example: infant
      responses:
        '200':
          description: Fare information
          content:
            application/json:
              schema:
                type: object
                properties:
                  fare:
                    type: number
                    example: 299.99
                  message:
                    type: string
                    example: Class does not exist on that flight
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/fares/flight:
    post:
      tags:
        - Fares
      summary: Get flight fares by flight number
      description: Get fare information for all passenger types for a specific flight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flight_number
                - travel_class
              properties:
                flight_number:
                  type: string
                  example: AA101
                travel_class:
                  type: string
                  enum: [economy, premium, business]
                  example: economy
      responses:
        '200':
          description: Flight fares by passenger type
          content:
            application/json:
              schema:
                type: object
                properties:
                  fares:
                    type: object
                    properties:
                      infant:
                        type: number
                        example: 0
                      child:
                        type: number
                        example: 149.99
                      adult:
                        type: number
                        example: 299.99
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Flight not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/bookings/create:
    post:
      tags:
        - Bookings
      summary: Create a new booking
      description: Create a new flight booking with passengers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - user_email
                - user_name
                - flight_id
                - flight_from
                - flight_to
                - flight_date
                - travel_class
                - total_amount
                - passengers
              properties:
                user_id:
                  type: string
                  example: user123
                user_email:
                  type: string
                  format: email
                  example: user@example.com
                user_name:
                  type: string
                  example: John Doe
                flight_id:
                  type: string
                  example: flight456
                payment_id:
                  type: string
                  example: payment789
                flight_from:
                  type: string
                  example: NYC
                flight_to:
                  type: string
                  example: LAX
                flight_date:
                  type: string
                  format: date
                  example: '2024-12-25'
                travel_class:
                  type: string
                  enum: [economy, premium, business]
                  example: economy
                total_amount:
                  type: number
                  example: 599.98
                passengers:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - age
                      - gender
                    properties:
                      name:
                        type: string
                        example: John Doe
                      age:
                        type: string
                        example: '30'
                      gender:
                        type: string
                        example: male
      responses:
        '200':
          description: Booking created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Booking successful
                  booking_id:
                    type: string
                    example: booking123
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing required fields.
                  received:
                    type: object
                    properties:
                      user_id:
                        type: boolean
                      user_email:
                        type: boolean
                      user_name:
                        type: boolean
                      flight_id:
                        type: boolean
                      passengers:
                        type: boolean
                      flight_from:
                        type: boolean
                      flight_to:
                        type: boolean
                      flight_date:
                        type: boolean
                      travel_class:
                        type: boolean
                      total_amount:
                        type: boolean
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/bookings/user:
    post:
      tags:
        - Bookings
      summary: Get user bookings
      description: Retrieve all bookings for a specific user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: User bookings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookingDetails'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/bookings/reschedule:
    patch:
      tags:
        - Bookings
      summary: Reschedule a booking
      description: Update the flight date for an existing booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - passenger_name
                - flight_id
                - new_flight_date
              properties:
                passenger_name:
                  type: string
                  example: John Doe
                flight_id:
                  type: string
                  example: flight456
                new_flight_date:
                  type: string
                  format: date
                  example: '2024-12-26'
      responses:
        '200':
          description: Booking rescheduled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Booking date updated successfully
                  updatedBooking:
                    $ref: '#/components/schemas/Booking'
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Passenger or booking not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/bookings/updates:
    get:
      tags:
        - Real-time
      summary: Server-Sent Events for booking updates
      description: Real-time updates for booking changes using Server-Sent Events
      responses:
        '200':
          description: SSE connection established
          content:
            text/event-stream:
              schema:
                type: string
                example: |
                  data: {"type":"connected","timestamp":"2024-12-15T10:30:00Z"}
                  
                  data: {"type":"heartbeat","timestamp":"2024-12-15T10:30:05Z","lastCheck":"2024-12-15T10:30:00Z"}
                  
                  data: {"type":"update","data":[{"id":"booking123","updated_at":"2024-12-15T10:30:03Z"}],"timestamp":"2024-12-15T10:30:05Z"}
              examples:
                connected:
                  summary: Connection established
                  value: 'data: {"type":"connected","timestamp":"2024-12-15T10:30:00Z"}'
                heartbeat:
                  summary: Heartbeat message
                  value: 'data: {"type":"heartbeat","timestamp":"2024-12-15T10:30:05Z","lastCheck":"2024-12-15T10:30:00Z"}'
                update:
                  summary: Booking update
                  value: 'data: {"type":"update","data":[{"id":"booking123","updated_at":"2024-12-15T10:30:03Z"}],"timestamp":"2024-12-15T10:30:05Z"}'
                error:
                  summary: Error message
                  value: 'data: {"type":"error","message":"Polling failed"}'
          headers:
            Content-Type:
              schema:
                type: string
                example: text/event-stream
            Cache-Control:
              schema:
                type: string
                example: no-cache, no-transform
            Connection:
              schema:
                type: string
                example: keep-alive

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: user123
        email:
          type: string
          format: email
          example: user@example.com
        name:
          type: string
          example: John Doe
        is_admin:
          type: boolean
          example: false

    Flight:
      type: object
      properties:
        flight_id:
          type: string
          example: flight456
        date:
          type: string
          format: date
          example: '2024-12-25'
        from:
          type: string
          example: NYC
        to:
          type: string
          example: LAX
        fare:
          type: number
          nullable: true
          example: 299.99
        flight_number:
          type: string
          example: AA101
        company_name:
          type: string
          example: American Airlines
        departure_time:
          type: string
          example: '08:00:00'
        arrival_time:
          type: string
          example: '11:30:00'

    Passenger:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        age:
          type: integer
          example: 30
        gender:
          type: string
          example: male
        seat_number:
          type: string
          example: A12
        is_primary:
          type: boolean
          example: true

    Booking:
      type: object
      properties:
        id:
          type: string
          example: booking123
        user_id:
          type: string
          example: user123
        flight_id:
          type: string
          example: flight456
        payment_id:
          type: string
          nullable: true
          example: payment789
        payment_status:
          type: boolean
          example: true
        flight_from:
          type: string
          example: NYC
        flight_to:
          type: string
          example: LAX
        flight_date:
          type: string
          format: date
          example: '2024-12-25'
        travel_class:
          type: string
          enum: [economy, premium, business]
          example: economy
        total_amount:
          type: number
          example: 599.98
        created_at:
          type: string
          format: date-time
          example: '2024-12-15T10:30:00Z'

    BookingDetails:
      type: object
      properties:
        id:
          type: string
          example: booking123
        flight_id:
          type: string
          example: flight456
        payment_id:
          type: string
          nullable: true
          example: payment789
        payment_status:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2024-12-15T10:30:00Z'
        travel_class:
          type: string
          enum: [economy, premium, business]
          example: economy
        total_amount:
          type: number
          example: 599.98
        flight:
          type: object
          properties:
            id:
              type: string
              example: flight456
            flight_number:
              type: string
              example: AA101
            company_name:
              type: string
              example: American Airlines
            departure_time:
              type: string
              example: '08:00:00'
            arrival_time:
              type: string
              example: '11:30:00'
        journey:
          type: object
          properties:
            flight_from:
              type: string
              example: NYC
            flight_to:
              type: string
              example: LAX
            flight_date:
              type: string
              format: date
              example: '2024-12-25'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/Passenger'

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Error message
        error:
          type: string
          example: Detailed error information

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

security:
  - bearerAuth: []
  - cookieAuth: []